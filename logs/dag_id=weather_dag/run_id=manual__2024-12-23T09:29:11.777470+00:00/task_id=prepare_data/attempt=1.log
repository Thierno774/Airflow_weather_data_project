[2024-12-23T09:29:21.980+0000] {taskinstance.py:1956} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: weather_dag.prepare_data manual__2024-12-23T09:29:11.777470+00:00 [queued]>
[2024-12-23T09:29:21.988+0000] {taskinstance.py:1956} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: weather_dag.prepare_data manual__2024-12-23T09:29:11.777470+00:00 [queued]>
[2024-12-23T09:29:21.988+0000] {taskinstance.py:2170} INFO - Starting attempt 1 of 3
[2024-12-23T09:29:21.998+0000] {taskinstance.py:2191} INFO - Executing <Task(PythonOperator): prepare_data> on 2024-12-23 09:29:11.777470+00:00
[2024-12-23T09:29:22.005+0000] {standard_task_runner.py:60} INFO - Started process 3860 to run task
[2024-12-23T09:29:22.007+0000] {standard_task_runner.py:87} INFO - Running: ['***', 'tasks', 'run', 'weather_dag', 'prepare_data', 'manual__2024-12-23T09:29:11.777470+00:00', '--job-id', '214', '--raw', '--subdir', 'DAGS_FOLDER/extract.py', '--cfg-path', '/tmp/tmpoaphp0is']
[2024-12-23T09:29:22.008+0000] {standard_task_runner.py:88} INFO - Job 214: Subtask prepare_data
[2024-12-23T09:29:22.022+0000] {warnings.py:109} WARNING - /home/***/.local/lib/python3.8/site-packages/***/settings.py:194: DeprecationWarning: The sql_alchemy_conn option in [core] has been moved to the sql_alchemy_conn option in [database] - the old setting has been used, but please update your config.
  SQL_ALCHEMY_CONN = conf.get("database", "SQL_ALCHEMY_CONN")

[2024-12-23T09:29:22.081+0000] {task_command.py:423} INFO - Running <TaskInstance: weather_dag.prepare_data manual__2024-12-23T09:29:11.777470+00:00 [running]> on host b853fb0270cd
[2024-12-23T09:29:22.184+0000] {taskinstance.py:2480} INFO - Exporting env vars: AIRFLOW_CTX_DAG_EMAIL='thiernosidybah232@gmail.com' AIRFLOW_CTX_DAG_OWNER='***' AIRFLOW_CTX_DAG_ID='weather_dag' AIRFLOW_CTX_TASK_ID='prepare_data' AIRFLOW_CTX_EXECUTION_DATE='2024-12-23T09:29:11.777470+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='manual__2024-12-23T09:29:11.777470+00:00'
[2024-12-23T09:29:22.204+0000] {logging_mixin.py:188} INFO -      temperature                        city  pression                 date
173       274.02  Arrondissement de Grenoble      1031  2024-12-17 20:18:29
164       279.58  Arrondissement de Grenoble      1024  2024-12-18 13:14:37
155       268.46  Arrondissement de Grenoble      1017  2024-12-23 08:35:38
146       268.46  Arrondissement de Grenoble      1017  2024-12-23 08:39:05
137       268.46  Arrondissement de Grenoble      1017  2024-12-23 08:46:05
[2024-12-23T09:29:22.205+0000] {warnings.py:109} WARNING - /opt/***/dags/extract.py:118: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data_temp.loc[:, "target"] = data_temp['temperature'].shift(1)

[2024-12-23T09:29:22.205+0000] {warnings.py:109} WARNING - /opt/***/dags/extract.py:121: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data_temp.loc[:, f"temp_m-{element}"] = data_temp['temperature'].shift(-element)

[2024-12-23T09:29:22.211+0000] {warnings.py:109} WARNING - /opt/***/dags/extract.py:118: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data_temp.loc[:, "target"] = data_temp['temperature'].shift(1)

[2024-12-23T09:29:22.212+0000] {warnings.py:109} WARNING - /opt/***/dags/extract.py:121: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data_temp.loc[:, f"temp_m-{element}"] = data_temp['temperature'].shift(-element)

[2024-12-23T09:29:22.218+0000] {warnings.py:109} WARNING - /opt/***/dags/extract.py:118: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data_temp.loc[:, "target"] = data_temp['temperature'].shift(1)

[2024-12-23T09:29:22.218+0000] {warnings.py:109} WARNING - /opt/***/dags/extract.py:121: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data_temp.loc[:, f"temp_m-{element}"] = data_temp['temperature'].shift(-element)

[2024-12-23T09:29:22.224+0000] {warnings.py:109} WARNING - /opt/***/dags/extract.py:118: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data_temp.loc[:, "target"] = data_temp['temperature'].shift(1)

[2024-12-23T09:29:22.224+0000] {warnings.py:109} WARNING - /opt/***/dags/extract.py:121: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data_temp.loc[:, f"temp_m-{element}"] = data_temp['temperature'].shift(-element)

[2024-12-23T09:29:22.230+0000] {warnings.py:109} WARNING - /opt/***/dags/extract.py:118: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data_temp.loc[:, "target"] = data_temp['temperature'].shift(1)

[2024-12-23T09:29:22.231+0000] {warnings.py:109} WARNING - /opt/***/dags/extract.py:121: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data_temp.loc[:, f"temp_m-{element}"] = data_temp['temperature'].shift(-element)

[2024-12-23T09:29:22.237+0000] {warnings.py:109} WARNING - /opt/***/dags/extract.py:118: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data_temp.loc[:, "target"] = data_temp['temperature'].shift(1)

[2024-12-23T09:29:22.237+0000] {warnings.py:109} WARNING - /opt/***/dags/extract.py:121: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data_temp.loc[:, f"temp_m-{element}"] = data_temp['temperature'].shift(-element)

[2024-12-23T09:29:22.243+0000] {warnings.py:109} WARNING - /opt/***/dags/extract.py:118: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data_temp.loc[:, "target"] = data_temp['temperature'].shift(1)

[2024-12-23T09:29:22.243+0000] {warnings.py:109} WARNING - /opt/***/dags/extract.py:121: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data_temp.loc[:, f"temp_m-{element}"] = data_temp['temperature'].shift(-element)

[2024-12-23T09:29:22.249+0000] {warnings.py:109} WARNING - /opt/***/dags/extract.py:118: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data_temp.loc[:, "target"] = data_temp['temperature'].shift(1)

[2024-12-23T09:29:22.250+0000] {warnings.py:109} WARNING - /opt/***/dags/extract.py:121: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data_temp.loc[:, f"temp_m-{element}"] = data_temp['temperature'].shift(-element)

[2024-12-23T09:29:22.256+0000] {warnings.py:109} WARNING - /opt/***/dags/extract.py:118: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data_temp.loc[:, "target"] = data_temp['temperature'].shift(1)

[2024-12-23T09:29:22.256+0000] {warnings.py:109} WARNING - /opt/***/dags/extract.py:121: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data_temp.loc[:, f"temp_m-{element}"] = data_temp['temperature'].shift(-element)

[2024-12-23T09:29:22.261+0000] {python.py:201} INFO - Done. Returned value was: Empty DataFrame
Columns: [temperature, city, pression, date, target, temp_m-1, temp_m-2, temp_m-3, temp_m-4, temp_m-5, temp_m-6, temp_m-7, temp_m-8, temp_m-9]
Index: []
[2024-12-23T09:29:22.299+0000] {taskinstance.py:1138} INFO - Marking task as SUCCESS. dag_id=weather_dag, task_id=prepare_data, execution_date=20241223T092911, start_date=20241223T092921, end_date=20241223T092922
[2024-12-23T09:29:22.340+0000] {local_task_job_runner.py:234} INFO - Task exited with return code 0
[2024-12-23T09:29:22.368+0000] {taskinstance.py:3280} INFO - 0 downstream tasks scheduled from follow-on schedule check
