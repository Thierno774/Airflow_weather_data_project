[2024-12-17T20:19:53.374+0000] {taskinstance.py:1956} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: weather_dag.prepare_data manual__2024-12-17T20:17:42.880322+00:00 [queued]>
[2024-12-17T20:19:53.379+0000] {taskinstance.py:1956} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: weather_dag.prepare_data manual__2024-12-17T20:17:42.880322+00:00 [queued]>
[2024-12-17T20:19:53.379+0000] {taskinstance.py:2170} INFO - Starting attempt 3 of 3
[2024-12-17T20:19:53.386+0000] {taskinstance.py:2191} INFO - Executing <Task(PythonOperator): prepare_data> on 2024-12-17 20:17:42.880322+00:00
[2024-12-17T20:19:53.392+0000] {standard_task_runner.py:60} INFO - Started process 18425 to run task
[2024-12-17T20:19:53.395+0000] {standard_task_runner.py:87} INFO - Running: ['***', 'tasks', 'run', 'weather_dag', 'prepare_data', 'manual__2024-12-17T20:17:42.880322+00:00', '--job-id', '135', '--raw', '--subdir', 'DAGS_FOLDER/extract.py', '--cfg-path', '/tmp/tmpwuw2z5om']
[2024-12-17T20:19:53.396+0000] {standard_task_runner.py:88} INFO - Job 135: Subtask prepare_data
[2024-12-17T20:19:53.406+0000] {warnings.py:109} WARNING - /home/***/.local/lib/python3.8/site-packages/***/settings.py:194: DeprecationWarning: The sql_alchemy_conn option in [core] has been moved to the sql_alchemy_conn option in [database] - the old setting has been used, but please update your config.
  SQL_ALCHEMY_CONN = conf.get("database", "SQL_ALCHEMY_CONN")

[2024-12-17T20:19:53.442+0000] {task_command.py:423} INFO - Running <TaskInstance: weather_dag.prepare_data manual__2024-12-17T20:17:42.880322+00:00 [running]> on host 3b537f09ccb4
[2024-12-17T20:19:53.525+0000] {taskinstance.py:2480} INFO - Exporting env vars: AIRFLOW_CTX_DAG_EMAIL='thiernosidybah232@gmail.com' AIRFLOW_CTX_DAG_OWNER='***' AIRFLOW_CTX_DAG_ID='weather_dag' AIRFLOW_CTX_TASK_ID='prepare_data' AIRFLOW_CTX_EXECUTION_DATE='2024-12-17T20:17:42.880322+00:00' AIRFLOW_CTX_TRY_NUMBER='3' AIRFLOW_CTX_DAG_RUN_ID='manual__2024-12-17T20:17:42.880322+00:00'
[2024-12-17T20:19:53.537+0000] {warnings.py:109} WARNING - /opt/***/dags/extract.py:91: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_temp.loc[:, "target"] = df_temp["temperature"].shift(1)

[2024-12-17T20:19:53.538+0000] {warnings.py:109} WARNING - /opt/***/dags/extract.py:94: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_temp.loc[:, 'temp_m-{}'.format(i)

[2024-12-17T20:19:53.538+0000] {warnings.py:109} WARNING - /opt/***/dags/extract.py:94: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_temp.loc[:, 'temp_m-{}'.format(i)

[2024-12-17T20:19:53.539+0000] {warnings.py:109} WARNING - /opt/***/dags/extract.py:94: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_temp.loc[:, 'temp_m-{}'.format(i)

[2024-12-17T20:19:53.539+0000] {warnings.py:109} WARNING - /opt/***/dags/extract.py:94: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_temp.loc[:, 'temp_m-{}'.format(i)

[2024-12-17T20:19:53.540+0000] {warnings.py:109} WARNING - /opt/***/dags/extract.py:94: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_temp.loc[:, 'temp_m-{}'.format(i)

[2024-12-17T20:19:53.541+0000] {warnings.py:109} WARNING - /opt/***/dags/extract.py:94: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_temp.loc[:, 'temp_m-{}'.format(i)

[2024-12-17T20:19:53.541+0000] {warnings.py:109} WARNING - /opt/***/dags/extract.py:94: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_temp.loc[:, 'temp_m-{}'.format(i)

[2024-12-17T20:19:53.541+0000] {warnings.py:109} WARNING - /opt/***/dags/extract.py:94: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_temp.loc[:, 'temp_m-{}'.format(i)

[2024-12-17T20:19:53.542+0000] {warnings.py:109} WARNING - /opt/***/dags/extract.py:94: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_temp.loc[:, 'temp_m-{}'.format(i)

[2024-12-17T20:19:53.543+0000] {warnings.py:109} WARNING - /opt/***/dags/extract.py:91: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_temp.loc[:, "target"] = df_temp["temperature"].shift(1)

[2024-12-17T20:19:53.544+0000] {warnings.py:109} WARNING - /opt/***/dags/extract.py:94: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_temp.loc[:, 'temp_m-{}'.format(i)

[2024-12-17T20:19:53.544+0000] {warnings.py:109} WARNING - /opt/***/dags/extract.py:94: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_temp.loc[:, 'temp_m-{}'.format(i)

[2024-12-17T20:19:53.544+0000] {warnings.py:109} WARNING - /opt/***/dags/extract.py:94: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_temp.loc[:, 'temp_m-{}'.format(i)

[2024-12-17T20:19:53.545+0000] {warnings.py:109} WARNING - /opt/***/dags/extract.py:94: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_temp.loc[:, 'temp_m-{}'.format(i)

[2024-12-17T20:19:53.545+0000] {warnings.py:109} WARNING - /opt/***/dags/extract.py:94: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_temp.loc[:, 'temp_m-{}'.format(i)

[2024-12-17T20:19:53.546+0000] {warnings.py:109} WARNING - /opt/***/dags/extract.py:94: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_temp.loc[:, 'temp_m-{}'.format(i)

[2024-12-17T20:19:53.546+0000] {warnings.py:109} WARNING - /opt/***/dags/extract.py:94: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_temp.loc[:, 'temp_m-{}'.format(i)

[2024-12-17T20:19:53.546+0000] {warnings.py:109} WARNING - /opt/***/dags/extract.py:94: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_temp.loc[:, 'temp_m-{}'.format(i)

[2024-12-17T20:19:53.547+0000] {warnings.py:109} WARNING - /opt/***/dags/extract.py:94: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_temp.loc[:, 'temp_m-{}'.format(i)

[2024-12-17T20:19:53.548+0000] {warnings.py:109} WARNING - /opt/***/dags/extract.py:91: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_temp.loc[:, "target"] = df_temp["temperature"].shift(1)

[2024-12-17T20:19:53.548+0000] {warnings.py:109} WARNING - /opt/***/dags/extract.py:94: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_temp.loc[:, 'temp_m-{}'.format(i)

[2024-12-17T20:19:53.549+0000] {warnings.py:109} WARNING - /opt/***/dags/extract.py:94: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_temp.loc[:, 'temp_m-{}'.format(i)

[2024-12-17T20:19:53.549+0000] {warnings.py:109} WARNING - /opt/***/dags/extract.py:94: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_temp.loc[:, 'temp_m-{}'.format(i)

[2024-12-17T20:19:53.549+0000] {warnings.py:109} WARNING - /opt/***/dags/extract.py:94: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_temp.loc[:, 'temp_m-{}'.format(i)

[2024-12-17T20:19:53.550+0000] {warnings.py:109} WARNING - /opt/***/dags/extract.py:94: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_temp.loc[:, 'temp_m-{}'.format(i)

[2024-12-17T20:19:53.550+0000] {warnings.py:109} WARNING - /opt/***/dags/extract.py:94: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_temp.loc[:, 'temp_m-{}'.format(i)

[2024-12-17T20:19:53.551+0000] {warnings.py:109} WARNING - /opt/***/dags/extract.py:94: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_temp.loc[:, 'temp_m-{}'.format(i)

[2024-12-17T20:19:53.551+0000] {warnings.py:109} WARNING - /opt/***/dags/extract.py:94: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_temp.loc[:, 'temp_m-{}'.format(i)

[2024-12-17T20:19:53.551+0000] {warnings.py:109} WARNING - /opt/***/dags/extract.py:94: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_temp.loc[:, 'temp_m-{}'.format(i)

[2024-12-17T20:19:53.552+0000] {warnings.py:109} WARNING - /opt/***/dags/extract.py:91: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_temp.loc[:, "target"] = df_temp["temperature"].shift(1)

[2024-12-17T20:19:53.553+0000] {warnings.py:109} WARNING - /opt/***/dags/extract.py:94: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_temp.loc[:, 'temp_m-{}'.format(i)

[2024-12-17T20:19:53.553+0000] {warnings.py:109} WARNING - /opt/***/dags/extract.py:94: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_temp.loc[:, 'temp_m-{}'.format(i)

[2024-12-17T20:19:53.554+0000] {warnings.py:109} WARNING - /opt/***/dags/extract.py:94: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_temp.loc[:, 'temp_m-{}'.format(i)

[2024-12-17T20:19:53.554+0000] {warnings.py:109} WARNING - /opt/***/dags/extract.py:94: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_temp.loc[:, 'temp_m-{}'.format(i)

[2024-12-17T20:19:53.555+0000] {warnings.py:109} WARNING - /opt/***/dags/extract.py:94: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_temp.loc[:, 'temp_m-{}'.format(i)

[2024-12-17T20:19:53.555+0000] {warnings.py:109} WARNING - /opt/***/dags/extract.py:94: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_temp.loc[:, 'temp_m-{}'.format(i)

[2024-12-17T20:19:53.555+0000] {warnings.py:109} WARNING - /opt/***/dags/extract.py:94: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_temp.loc[:, 'temp_m-{}'.format(i)

[2024-12-17T20:19:53.556+0000] {warnings.py:109} WARNING - /opt/***/dags/extract.py:94: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_temp.loc[:, 'temp_m-{}'.format(i)

[2024-12-17T20:19:53.556+0000] {warnings.py:109} WARNING - /opt/***/dags/extract.py:94: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_temp.loc[:, 'temp_m-{}'.format(i)

[2024-12-17T20:19:53.557+0000] {warnings.py:109} WARNING - /opt/***/dags/extract.py:91: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_temp.loc[:, "target"] = df_temp["temperature"].shift(1)

[2024-12-17T20:19:53.558+0000] {warnings.py:109} WARNING - /opt/***/dags/extract.py:94: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_temp.loc[:, 'temp_m-{}'.format(i)

[2024-12-17T20:19:53.558+0000] {warnings.py:109} WARNING - /opt/***/dags/extract.py:94: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_temp.loc[:, 'temp_m-{}'.format(i)

[2024-12-17T20:19:53.558+0000] {warnings.py:109} WARNING - /opt/***/dags/extract.py:94: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_temp.loc[:, 'temp_m-{}'.format(i)

[2024-12-17T20:19:53.559+0000] {warnings.py:109} WARNING - /opt/***/dags/extract.py:94: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_temp.loc[:, 'temp_m-{}'.format(i)

[2024-12-17T20:19:53.559+0000] {warnings.py:109} WARNING - /opt/***/dags/extract.py:94: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_temp.loc[:, 'temp_m-{}'.format(i)

[2024-12-17T20:19:53.560+0000] {warnings.py:109} WARNING - /opt/***/dags/extract.py:94: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_temp.loc[:, 'temp_m-{}'.format(i)

[2024-12-17T20:19:53.560+0000] {warnings.py:109} WARNING - /opt/***/dags/extract.py:94: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_temp.loc[:, 'temp_m-{}'.format(i)

[2024-12-17T20:19:53.560+0000] {warnings.py:109} WARNING - /opt/***/dags/extract.py:94: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_temp.loc[:, 'temp_m-{}'.format(i)

[2024-12-17T20:19:53.561+0000] {warnings.py:109} WARNING - /opt/***/dags/extract.py:94: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_temp.loc[:, 'temp_m-{}'.format(i)

[2024-12-17T20:19:53.562+0000] {warnings.py:109} WARNING - /opt/***/dags/extract.py:91: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_temp.loc[:, "target"] = df_temp["temperature"].shift(1)

[2024-12-17T20:19:53.562+0000] {warnings.py:109} WARNING - /opt/***/dags/extract.py:94: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_temp.loc[:, 'temp_m-{}'.format(i)

[2024-12-17T20:19:53.563+0000] {warnings.py:109} WARNING - /opt/***/dags/extract.py:94: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_temp.loc[:, 'temp_m-{}'.format(i)

[2024-12-17T20:19:53.563+0000] {warnings.py:109} WARNING - /opt/***/dags/extract.py:94: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_temp.loc[:, 'temp_m-{}'.format(i)

[2024-12-17T20:19:53.564+0000] {warnings.py:109} WARNING - /opt/***/dags/extract.py:94: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_temp.loc[:, 'temp_m-{}'.format(i)

[2024-12-17T20:19:53.564+0000] {warnings.py:109} WARNING - /opt/***/dags/extract.py:94: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_temp.loc[:, 'temp_m-{}'.format(i)

[2024-12-17T20:19:53.564+0000] {warnings.py:109} WARNING - /opt/***/dags/extract.py:94: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_temp.loc[:, 'temp_m-{}'.format(i)

[2024-12-17T20:19:53.565+0000] {warnings.py:109} WARNING - /opt/***/dags/extract.py:94: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_temp.loc[:, 'temp_m-{}'.format(i)

[2024-12-17T20:19:53.565+0000] {warnings.py:109} WARNING - /opt/***/dags/extract.py:94: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_temp.loc[:, 'temp_m-{}'.format(i)

[2024-12-17T20:19:53.566+0000] {warnings.py:109} WARNING - /opt/***/dags/extract.py:94: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_temp.loc[:, 'temp_m-{}'.format(i)

[2024-12-17T20:19:53.567+0000] {warnings.py:109} WARNING - /opt/***/dags/extract.py:91: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_temp.loc[:, "target"] = df_temp["temperature"].shift(1)

[2024-12-17T20:19:53.567+0000] {warnings.py:109} WARNING - /opt/***/dags/extract.py:94: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_temp.loc[:, 'temp_m-{}'.format(i)

[2024-12-17T20:19:53.568+0000] {warnings.py:109} WARNING - /opt/***/dags/extract.py:94: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_temp.loc[:, 'temp_m-{}'.format(i)

[2024-12-17T20:19:53.568+0000] {warnings.py:109} WARNING - /opt/***/dags/extract.py:94: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_temp.loc[:, 'temp_m-{}'.format(i)

[2024-12-17T20:19:53.568+0000] {warnings.py:109} WARNING - /opt/***/dags/extract.py:94: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_temp.loc[:, 'temp_m-{}'.format(i)

[2024-12-17T20:19:53.569+0000] {warnings.py:109} WARNING - /opt/***/dags/extract.py:94: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_temp.loc[:, 'temp_m-{}'.format(i)

[2024-12-17T20:19:53.569+0000] {warnings.py:109} WARNING - /opt/***/dags/extract.py:94: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_temp.loc[:, 'temp_m-{}'.format(i)

[2024-12-17T20:19:53.570+0000] {warnings.py:109} WARNING - /opt/***/dags/extract.py:94: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_temp.loc[:, 'temp_m-{}'.format(i)

[2024-12-17T20:19:53.570+0000] {warnings.py:109} WARNING - /opt/***/dags/extract.py:94: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_temp.loc[:, 'temp_m-{}'.format(i)

[2024-12-17T20:19:53.570+0000] {warnings.py:109} WARNING - /opt/***/dags/extract.py:94: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_temp.loc[:, 'temp_m-{}'.format(i)

[2024-12-17T20:19:53.571+0000] {warnings.py:109} WARNING - /opt/***/dags/extract.py:91: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_temp.loc[:, "target"] = df_temp["temperature"].shift(1)

[2024-12-17T20:19:53.572+0000] {warnings.py:109} WARNING - /opt/***/dags/extract.py:94: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_temp.loc[:, 'temp_m-{}'.format(i)

[2024-12-17T20:19:53.572+0000] {warnings.py:109} WARNING - /opt/***/dags/extract.py:94: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_temp.loc[:, 'temp_m-{}'.format(i)

[2024-12-17T20:19:53.573+0000] {warnings.py:109} WARNING - /opt/***/dags/extract.py:94: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_temp.loc[:, 'temp_m-{}'.format(i)

[2024-12-17T20:19:53.573+0000] {warnings.py:109} WARNING - /opt/***/dags/extract.py:94: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_temp.loc[:, 'temp_m-{}'.format(i)

[2024-12-17T20:19:53.573+0000] {warnings.py:109} WARNING - /opt/***/dags/extract.py:94: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_temp.loc[:, 'temp_m-{}'.format(i)

[2024-12-17T20:19:53.574+0000] {warnings.py:109} WARNING - /opt/***/dags/extract.py:94: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_temp.loc[:, 'temp_m-{}'.format(i)

[2024-12-17T20:19:53.574+0000] {warnings.py:109} WARNING - /opt/***/dags/extract.py:94: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_temp.loc[:, 'temp_m-{}'.format(i)

[2024-12-17T20:19:53.575+0000] {warnings.py:109} WARNING - /opt/***/dags/extract.py:94: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_temp.loc[:, 'temp_m-{}'.format(i)

[2024-12-17T20:19:53.575+0000] {warnings.py:109} WARNING - /opt/***/dags/extract.py:94: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_temp.loc[:, 'temp_m-{}'.format(i)

[2024-12-17T20:19:53.576+0000] {warnings.py:109} WARNING - /opt/***/dags/extract.py:91: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_temp.loc[:, "target"] = df_temp["temperature"].shift(1)

[2024-12-17T20:19:53.577+0000] {warnings.py:109} WARNING - /opt/***/dags/extract.py:94: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_temp.loc[:, 'temp_m-{}'.format(i)

[2024-12-17T20:19:53.577+0000] {warnings.py:109} WARNING - /opt/***/dags/extract.py:94: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_temp.loc[:, 'temp_m-{}'.format(i)

[2024-12-17T20:19:53.577+0000] {warnings.py:109} WARNING - /opt/***/dags/extract.py:94: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_temp.loc[:, 'temp_m-{}'.format(i)

[2024-12-17T20:19:53.578+0000] {warnings.py:109} WARNING - /opt/***/dags/extract.py:94: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_temp.loc[:, 'temp_m-{}'.format(i)

[2024-12-17T20:19:53.578+0000] {warnings.py:109} WARNING - /opt/***/dags/extract.py:94: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_temp.loc[:, 'temp_m-{}'.format(i)

[2024-12-17T20:19:53.579+0000] {warnings.py:109} WARNING - /opt/***/dags/extract.py:94: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_temp.loc[:, 'temp_m-{}'.format(i)

[2024-12-17T20:19:53.579+0000] {warnings.py:109} WARNING - /opt/***/dags/extract.py:94: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_temp.loc[:, 'temp_m-{}'.format(i)

[2024-12-17T20:19:53.579+0000] {warnings.py:109} WARNING - /opt/***/dags/extract.py:94: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_temp.loc[:, 'temp_m-{}'.format(i)

[2024-12-17T20:19:53.580+0000] {warnings.py:109} WARNING - /opt/***/dags/extract.py:94: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  df_temp.loc[:, 'temp_m-{}'.format(i)

[2024-12-17T20:19:53.585+0000] {python.py:201} INFO - Done. Returned value was: (     temperature  pression  ...  city_New York  city_Toulouse
218       274.02      1031  ...          False          False
209       274.02      1031  ...          False          False
200       274.02      1031  ...          False          False
191       274.02      1031  ...          False          False
182       274.02      1031  ...          False          False
..           ...       ...  ...            ...            ...
117       282.14      1028  ...          False           True
108       282.14      1028  ...          False           True
99        282.14      1028  ...          False           True
90        282.14      1028  ...          False           True
81        282.14      1028  ...          False           True

[144 rows x 20 columns], 218    274.02
209    274.02
200    274.02
191    274.02
182    274.02
        ...  
117    282.14
108    282.14
99     282.14
90     282.14
81     282.14
Name: target, Length: 144, dtype: float64)
[2024-12-17T20:19:53.613+0000] {xcom.py:664} ERROR - Object of type tuple is not JSON serializable. If you are using pickle instead of JSON for XCom, then you need to enable pickle support for XCom in your *** config or make sure to decorate your object with attr.
[2024-12-17T20:19:53.614+0000] {taskinstance.py:2698} ERROR - Task failed with exception
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/utils/json.py", line 91, in default
    return serialize(o)
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/serialization/serde.py", line 147, in serialize
    return encode(classname, version, serialize(data, depth + 1))
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/serialization/serde.py", line 126, in serialize
    return [serialize(d, depth + 1) for d in o]
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/serialization/serde.py", line 126, in <listcomp>
    return [serialize(d, depth + 1) for d in o]
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/serialization/serde.py", line 180, in serialize
    raise TypeError(f"cannot serialize object of type {cls}")
TypeError: cannot serialize object of type <class 'pandas.core.series.Series'>

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/models/taskinstance.py", line 440, in _execute_task
    task_instance.xcom_push(key=XCOM_RETURN_KEY, value=xcom_value, session=session)
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/utils/session.py", line 76, in wrapper
    return func(*args, **kwargs)
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/models/taskinstance.py", line 2980, in xcom_push
    XCom.set(
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/utils/session.py", line 76, in wrapper
    return func(*args, **kwargs)
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/models/xcom.py", line 247, in set
    value = cls.serialize_value(
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/models/xcom.py", line 662, in serialize_value
    return json.dumps(value, cls=XComEncoder).encode("UTF-8")
  File "/usr/local/lib/python3.8/json/__init__.py", line 234, in dumps
    return cls(
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/utils/json.py", line 102, in encode
    o = self.default(o)
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/utils/json.py", line 93, in default
    return super().default(o)
  File "/usr/local/lib/python3.8/json/encoder.py", line 179, in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
TypeError: Object of type tuple is not JSON serializable
[2024-12-17T20:19:53.622+0000] {taskinstance.py:1138} INFO - Marking task as FAILED. dag_id=weather_dag, task_id=prepare_data, execution_date=20241217T201742, start_date=20241217T201953, end_date=20241217T201953
[2024-12-17T20:19:53.635+0000] {standard_task_runner.py:107} ERROR - Failed to execute job 135 for task prepare_data (Object of type tuple is not JSON serializable; 18425)
[2024-12-17T20:19:53.687+0000] {local_task_job_runner.py:234} INFO - Task exited with return code 1
[2024-12-17T20:19:53.708+0000] {taskinstance.py:3280} INFO - 0 downstream tasks scheduled from follow-on schedule check
